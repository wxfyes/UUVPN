name: Release Build (Signed APK)

on:
  push:
    tags:
      - 'v*'
    branches: [ main, master ]
    paths:
      - 'Android-kotlin-Code/**'
  workflow_dispatch:
    inputs:
      version:
        description: '版本号 (例如: v3.2.3)'
        required: true
        default: 'v3.2.3'
        type: string

jobs:
  release-build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Set up Android SDK
      uses: android-actions/setup-android@v3

    - name: Grant execute permission for gradlew
      run: chmod +x Android-kotlin-Code/gradlew

    - name: Decode Keystore
      run: |
        echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > Android-kotlin-Code/release.keystore
      env:
        ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}

    - name: Create signing.properties
      run: |
        cat > Android-kotlin-Code/signing.properties << EOF
        keystore.password=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
        key.alias=${{ secrets.ANDROID_KEY_ALIAS }}
        key.password=${{ secrets.ANDROID_KEY_PASSWORD }}
        EOF

    - name: Update Version for Android 14 Compatibility
      run: |
        cd Android-kotlin-Code
        # 确保使用Android 14兼容配置
        sed -i 's/targetSdk = 33/targetSdk = 34/' build.gradle.kts
        sed -i 's/compileSdkVersion(33)/compileSdkVersion(34)/' build.gradle.kts

    - name: Build Signed APK
      run: |
        cd Android-kotlin-Code
        echo "Starting build process..."
        ./gradlew assembleAlphaRelease -x lint -x test --no-daemon --stacktrace --continue
        echo "Build process completed"
        echo "Checking build results..."
        ls -la app/build/outputs/apk/ || echo "APK directory not found"

    - name: Find APK Files
      run: |
        echo "Searching for APK files..."
        find Android-kotlin-Code -name "*.apk" -type f
        echo ""
        echo "APK files found:"
        ls -la Android-kotlin-Code/app/build/outputs/apk/alpha/release/ || echo "Release directory not found"
        ls -la Android-kotlin-Code/app/build/outputs/apk/alpha/debug/ || echo "Debug directory not found"

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        files: Android-kotlin-Code/app/build/outputs/apk/**/*.apk
        tag_name: ${{ github.event.inputs.version || github.ref_name }}
        name: UUVPN ${{ github.event.inputs.version || github.ref_name }} (Official Release)
        body: |
          ## 🚀 UUVPN Android App - Official Release
          
          ### 📱 应用信息
          - **版本**: ${{ github.event.inputs.version || github.ref_name }}
          - **构建时间**: ${{ github.event.head_commit.timestamp || github.event.created_at }}
          - **构建类型**: Official Release (已签名)
          
          ### 🔧 安装说明
          1. 下载下方的APK文件
          2. 在Android设置中启用"未知来源"安装
          3. 安装APK文件
          
          ### 🌐 API配置
          - **API服务器**: https://tianque.126581.xyz
          - **配置端点**: https://tianque.126581.xyz/config
          - **VPN节点**: https://tianque.126581.xyz/api/vpnnodes.php
          
          ### 📋 功能特性
          - ✅ 用户登录/注册
          - ✅ VPN连接管理
          - ✅ 套餐订阅
          - ✅ 订单管理
          - ✅ 工单支持
          
          ### 🔐 安全信息
          - **APK签名**: 已使用正式签名密钥
          - **安全等级**: 生产环境可用
          
          ### 🔗 构建信息
          - **提交**: ${{ github.sha }}
          - **标签**: ${{ github.ref_name }}
          - **触发者**: ${{ github.actor }}
          
          ### 📝 发布说明
          - 此版本为正式签名版本，可直接用于生产环境
          - 建议在发布前进行充分测试
          - 如有问题，请提交Issue或联系开发者
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Show Build Info
      run: |
        echo "Official Release Build completed!"
        echo "APK files:"
        ls -la Android-kotlin-Code/app/build/outputs/apk/alpha/release/ || echo "Release directory not found, checking other locations..."
        ls -la Android-kotlin-Code/app/build/outputs/apk/alpha/debug/ || echo "Debug directory not found"
        echo ""
        echo "All APK files in project:"
        find Android-kotlin-Code -name "*.apk" -type f || echo "No APK files found"
        echo ""
        echo "Build output structure:"
        ls -la Android-kotlin-Code/app/build/outputs/ || echo "Outputs directory not found"
        echo ""
        echo "Release created at:"
        echo "https://github.com/${{ github.repository }}/releases/tag/${{ github.ref_name }}"
